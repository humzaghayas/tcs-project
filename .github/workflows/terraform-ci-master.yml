# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#
# To use this workflow, you will need to complete the following setup steps.
#
# 1. Create a `main.tf` file in the root of this repository with the `remote` backend and one or more resources defined.
#   Example `main.tf`:
#     # The configuration for the `remote` backend.
#     terraform {
#       backend "remote" {
#         # The name of your Terraform Cloud organization.
#         organization = "example-organization"
#
#         # The name of the Terraform Cloud workspace to store Terraform state files in.
#         workspaces {
#           name = "example-workspace"
#         }
#       }
#     }
#
#     # An example resource that does nothing.
#     resource "null_resource" "example" {
#       triggers = {
#         value = "A example resource that does nothing!"
#       }
#     }
#
#
# 2. Generate a Terraform Cloud user API token and store it as a GitHub secret (e.g. TF_API_TOKEN) on this repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# 3. Reference the GitHub secret in step using the `hashicorp/setup-terraform` GitHub Action.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: 'Terraform'

on:
  repository_dispatch:
    types: terraform
  push:
    branches:
      - main
    paths:
      - 'tcs_ct_customization/packages/b2b-terraform/**'

env:
  COMMERCETOOLS_URL: 'https://github.com/labd/terraform-provider-commercetools/releases/download/0.19.0/terraform-provider-commercetools-0.19.0-linux-amd64.tar.gz'
  TERRAFORM_VERSION: '0.12.17'
  CTP_PROJECT_KEY: ${{ secrets.CT_PROJECT_KEY }}
  CTP_CLIENT_SECRET: ${{ secrets.CT_CLIENT_SECRET }}
  CTP_CLIENT_ID: ${{ secrets.CT_CLIENT_ID }}
  CTP_SCOPES: ${{ secrets.CT_SCOPE }}
  CTP_AUTH_URL: ${{ secrets.CT_AUTH_URL }}
  CTP_API_URL: ${{ secrets.CT_API_URL }}
  TF_VAR_gcp_project_id: ${{ secrets.GC_PROJECT_ID }}
  TF_VAR_ct_project_key: ${{ secrets.CT_PROJECT_KEY }}
  TF_VAR_region: ${{ secrets.GC_PROJECT_REGION }}
  TF_VAR_region_functions: ${{ secrets.FIREBASE_FUNCTIONS_REGION }}
  TF_VAR_add_monthly_spent_topic: ${{ secrets.ADD_MONTHLY_SPENT_TOPIC }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-18.04
    environment: tcs-env

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@main
      
    - name: 'Install Terraform'
      run: |
        tf_version=$TERRAFORM_VERSION
        wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        unzip terraform_"$tf_version"_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        mkdir -p ~/.terraform.d/plugins
        wget -qO commercetools.tar.gz $COMMERCETOOLS_URL
        tar xzf commercetools.tar.gz -C ~/.terraform.d/plugins      
    - name: 'Terraform Lint'
      run: |
        cd packages/b2b-terraform/default
        echo ${{ secrets.GOOGLE_CLIENT_SECRET_base64 }} | base64 -d > serviceaccount.json
        terraform init -input=false
        terraform fmt -check=true -diff=true || ( echo >&2 "Canonical format and style doesn't match convention. Please fix (try running 'terraform fmt' locally)."; exit 3; )
        terraform validate
  plan_and_apply:
    name: Terraform Plan and Apply
    runs-on: ubuntu-18.04
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: 'Install Terraform'
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          mkdir -p ~/.terraform.d/plugins
          wget -qO commercetools.tar.gz $COMMERCETOOLS_URL
          tar xzf commercetools.tar.gz -C ~/.terraform.d/plugins      
      - name: 'Terraform Plan'
        run: |
          cd tcs_ct_customization/packages/tcs-terraform/default
          echo ${{ secrets.GOOGLE_CLIENT_SECRET_base64 }} | base64 -d > serviceaccount.json
          terraform init -input=false
          terraform plan -out=default_plan.tfplan -input=false
      - name: 'Terraform Apply'
        run: |
          cd tcs_ct_customization/packages/tcs-terraform/default
          terraform apply -input=false default_plan.tfplan
